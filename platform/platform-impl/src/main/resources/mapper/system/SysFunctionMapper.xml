<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.asiainfo.rms.system.dao.SysFunctionDao">
    <resultMap id="BaseResultMap" type="com.asiainfo.rms.system.domain.SysFunctionRepository">
        <result column="func_id" property="funcId" jdbcType="INTEGER"/>
        <result column="func_code" property="funcCode" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="notes" property="notes" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
        <result column="fun_seq" property="funSeq" jdbcType="INTEGER"/>
        <result column="view_path" property="viewPath" jdbcType="VARCHAR"/>
        <result column="func_type" property="funcType" jdbcType="CHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="ext1" property="ext1" jdbcType="VARCHAR"/>
        <result column="ext2" property="ext2" jdbcType="VARCHAR"/>
        <result column="ext3" property="ext3" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id='TABLE_SEQUENCE'>SYS_FUNCTION$SEQ.nextval</sql>

    <insert id="saveFunction" parameterType="com.asiainfo.rms.system.domain.SysFunctionRepository">
        <selectKey keyProperty="funcId" resultType="java.lang.Integer" order="BEFORE">
            select SYS_STAFF$SEQ.nextval from dual
        </selectKey>
        insert into SYS_FUNCTION
        <trim prefix="(" suffix=")" suffixOverrides=",">
            func_id,
            <if test="funcCode != null">
                func_code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="notes != null">
                notes,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="funSeq != null">
                fun_seq,
            </if>
            <if test="viewPath != null">
                view_path,
            </if>
            <if test="funcType != null">
                func_type,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="ext1 != null">
                ext1,
            </if>
            <if test="ext2 != null">
                ext2,
            </if>
            <if test="ext3 != null">
                ext3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{funcId,jdbcType=INTEGER},
            <if test="funcCode != null">
                #{funcCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="funSeq != null">
                #{funSeq,jdbcType=INTEGER},
            </if>
            <if test="viewPath != null">
                #{viewPath,jdbcType=VARCHAR},
            </if>
            <if test="funcType != null">
                #{funcType,jdbcType=CHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="ext1 != null">
                #{ext1,jdbcType=VARCHAR},
            </if>
            <if test="ext2 != null">
                #{ext2,jdbcType=VARCHAR},
            </if>
            <if test="ext3 != null">
                #{ext3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateFunction" parameterType="com.asiainfo.rms.system.domain.SysFunctionRepository">
        UPDATE SYS_FUNCTION
        <trim prefix="set" suffixOverrides=",">
            <if test="funcCode != null">
                func_code = #{funcCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                notes = #{notes,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="funSeq != null">
                fun_seq = #{funSeq,jdbcType=INTEGER},
            </if>
            <if test="viewPath != null">
                view_path = #{viewPath,jdbcType=VARCHAR},
            </if>
            <if test="funcType != null">
                func_type = #{funcType,jdbcType=CHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="ext1 != null">
                ext1 = #{ext1,jdbcType=VARCHAR},
            </if>
            <if test="ext2 != null">
                ext2 =#{ext2,jdbcType=VARCHAR},
            </if>
            <if test="ext3 != null">
                ext3 = #{ext3,jdbcType=VARCHAR},
            </if>
        </trim>
        where func_id = #{funcId,jdbcType=INTEGER}
    </update>
    <select id="selectByFunctionId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select * from SYS_FUNCTION
        where state = 1
        and func_id = #{funcId,jdbcType=INTEGER}
    </select>

    <select id="selectAllFunction" resultMap="BaseResultMap">
        select * from SYS_FUNCTION
        where 1= 1
        <if test="state != null">and state =#{state,jdbcType=INTEGER}</if>
        ORDER BY fun_seq
    </select>

    <update id="deleteFunctionById" parameterType="com.asiainfo.rms.system.domain.SysFunctionRepository">
        update SYS_FUNCTION
        set state = 0
        where func_id = #{funcId,jdbcType=INTEGER}
    </update>

    <!--<select id="selectAllFuncCode" resultMap="BaseResultMap" resultType="java.lang.Integer">-->
    <!--select FUNC_CODE from SYS_FUNCTION-->
    <!--where func_id = (select max(func_id) from SYS_FUNCTION)-->
    <!--</select>-->

    <select id="getFunctionByCode" resultType="java.lang.Integer">
        select count(*) from SYS_FUNCTION
        where FUNC_CODE = #{funcCode,jdbcType=VARCHAR}
    </select>

    <select id="selectFunctionByStaffId" resultMap="BaseResultMap">
        SELECT DISTINCT A.*
          FROM SYS_FUNCTION A, SYS_AUTHOR B, SYS_STAFF C
         WHERE  A.FUNC_ID IN (SELECT FUNC_ID
                               FROM SYS_STATION_FUNC D,SYS_STATION e
                              WHERE D.STATION_ID = B.STATION_ID
                              AND D.STATION_ID = E.STATION_ID
                              AND E.STATE = 1)
          AND C.STAFF_ID = B.STAFF_ID
          AND C.STATE = 1
          AND C.STAFF_ID = #{staffId,jdbcType=INTEGER}
          AND B.STATE = 1
          AND A.STATE = 1
          order by a.fun_seq
    </select>
</mapper>